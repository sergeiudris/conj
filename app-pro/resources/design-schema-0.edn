[
 {:db/ident :attribute/score
  :db/valueType :db.type/long
  :db/cardinality db.cardinality/one
  :db/doc "A score from 0 (not good) to 100 (brilliant)"}


 {:db/ident :uuid
  :db/valueType :db.type/uuid
  :db/cardinality db.cardinality/one
  :db/doc "globally unique for all entities, generated w/ datomic.api.squuid"
  :db/unique :db.unique/identity}

;  {:db/ident :attribute/sense
;   :db/valueType :db.type/string
;   :db/cardinality :db.cardinality/one
;   :db/doc "A one-word  sense estimate , e.g. wild, reasonable"}
 


;  {:db/ident :informationType
;   :db/valueType :db.type/string
;   :db/cardinality :db.cardinality/one
;   :db/doc "decision, requirement, idea, specification, note, thought"}
 


 ;; record
 
 {:db/ident :record/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "A piece of information (starts as an idea, note, thought)"}

 {:db/ident :record/type
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "thought, understanding, diet, day, choices"}


 {:db/ident :record/tags
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/many
  :db/doc "words characterizing record"
  :db/isComponent false}


 {:db/ident :record/user
  :db/valueType :db.type/ref
  :db/cardinality db.cardinality/one
  :db/doc "author of the record"}



 ;; idea
;  {:db/ident :idea/name
;   :db/valueType :db.type/string
;   :db/cardinality :db.cardinality/one
;   :db/doc "unique name"
;   :db/unique :db.unique/identity
;   ; :db/fulltext true
;   }
 
 {:db/ident :idea/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "idea in words"
  ; :db/fulltext true
  }

 {:db/ident :idea/threads
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "what aspects of life idea relates to"
  :db/isComponent true}

 {:db/ident :idea/tags
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/many
  :db/doc "words characterizing idea"
  :db/isComponent false}

;  {:db/ident :idea/score
;   :db/valueType :db.type/long
;   :db/cardinality :db.cardinality/one
;   :db/doc "A score from 0 (not good) to 100 (brilliant)"}
 
 {:db/ident :idea/requirements
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related ideas"
  :db/isComponent false}

 {:db/ident :idea/designs
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related designs"
  :db/isComponent false}
 
 {:db/ident :idea/user
  :db/valueType :db.type/ref
  :db/cardinality db.cardinality/one
  :db/doc "this attribute is incorrect, should be removed"}

 {:db/ident :idea/author
  :db/valueType :db.type/ref
  :db/cardinality db.cardinality/one
  :db/doc "author of the idea"}
 
   {:db/ident :idea/records
    :db/valueType :db.type/ref
    :db/cardinality db.cardinality/many
    :db/doc "records composing the idea"}
;  {:db/ident :idea/design-items
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related design items"
;   :db/isComponent false}
 
 {:db/ident :item/id
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one}
 {:db/ident :item/count
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one}


 {:db/ident :idea/decisions
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related decisions"
  :db/isComponent false}




;; requirement
 
 {:db/ident :requirement/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "in words"}

 {:db/ident :requirement/tags
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "keywords"
  :db/isComponent true}

;  {:db/ident :requirement/ideas
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related ideas"
;   :db/isComponent true}
 
 {:db/ident :requirement/designs
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related designs"
  :db/isComponent false}

 {:db/ident :requirement/decisions
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related decisions"
  :db/isComponent false}




 ;; decision
 
 {:db/ident :decision/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "in words"}


 {:db/ident :decision/tags
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "words characterizing decision"
  :db/isComponent true}

 {:db/ident :decision/threads
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc " diet, day, choices, project"
  :db/isComponent true}


;  {:db/ident :decision/ideas
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related ideas"
;   :db/isComponent true}
 
 {:db/ident :decision/designs
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "related designs"
  :db/isComponent false}

;  {:db/ident :decision/requirements
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related requirements"
;   :db/isComponent true}
 




 ;; design
 
 {:db/ident :design/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "name"
  ; :db/unique :db.unique/identity
  ; :db/fulltext true
  }

 {:db/ident :design/tags
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "keywords"
  :db/isComponent true}


;  {:db/ident :design/ideas
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related ideas"
;   :db/isComponent true }
 
;  {:db/ident :design/decisions
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related decisions"
;   :db/isComponent true}
 
;  {:db/ident :design/requirements
;   :db/valueType :db.type/ref
;   :db/cardinality :db.cardinality/many
;   :db/doc "related requirements"
;   :db/isComponent true}
 
 
 ;; users
 
 {:db/ident :user/firstname
  :db/valueType :db.type/string
  :db/cardinality db.cardinality/one
  :db/doc "firstname of the user"}
 
 
 {:db/ident :user/lastname
  :db/valueType :db.type/string
  :db/cardinality db.cardinality/one
  :db/doc "lastname of the user"}
 
 {:db/ident :user/email
  :db/valueType :db.type/string
  :db/cardinality db.cardinality/one
  :db/unique :db.unique/identity
  :db/doc "unique email of the user"}
 
 
 {:db/ident :user/teammate
  :db/valueType :db.type/ref
  :db/cardinality db.cardinality/one
  :db/doc "user's teammate for Duo tournament"}
 

 
 
 ;; idea,descision, requirement,specificatin,not, thought
 
 {:db/ident :thread/energy}
 {:db/ident :thread/exersize}
 {:db/ident :thread/diet}
 {:db/ident :thread/social}
 {:db/ident :thread/family}
 {:db/ident :thread/movies}
 {:db/ident :thread/games}
 {:db/ident :thread/fo4ram}
 {:db/ident :thread/sport}
 {:db/ident :thread/engineering}]






; record is the datum of the system
; record's value is both in text and as data/enums
; record has tags/threads/notes to query, but simple
; idea/records

; idea/records ?

; comments, ideas, requirements, decisions ... have records and other entities
; comments may not be necessary (only ideas ?)
; 

; what of all entities are refeernces only to other entities and filtering is done by entity type (== name) ?
; this way every entity is decoupled from other
; or is it too complex (inheritance-like) ?